{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport setAlert from \"./alert\";\nimport { SIGNIN_SUCCESS, SIGNIN_FAIL } from \"../Action/types\";\nimport authToken from \"../utils/authToken\";\nexport var login = function login(email, password, role, Active) {\n  return function _callee(dispatch) {\n    var header, body, response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            header = {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            };\n            body = JSON.stringify({\n              email: email,\n              password: password,\n              role: role,\n              Active: Active\n            });\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.post('/auth', body, header));\n\n          case 5:\n            response = _context.sent;\n            console.log('SIGNIN RES--->', response.data.msg);\n            dispatch({\n              type: SIGNIN_SUCCESS,\n              payload: response.data.msg\n            });\n            console.log('After dispatch siginSuccess');\n            dispatch(getUser());\n            _context.next = 17;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](2);\n            console.log('Error signIN-->', _context.t0);\n\n            if (_context.t0) {\n              _context.t0.forEach(function (error) {\n                dispatch(setAlert(error.msg, 'danger'));\n              });\n            }\n\n            dispatch({\n              type: SIGNIN_FAIL\n            });\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 12]], Promise);\n  };\n};","map":{"version":3,"sources":["/Users/ashimsmac/Desktop/MUM/Final_Project/final-porject-ghimirea/mobileclient/components/Action/auth.js"],"names":["axios","setAlert","SIGNIN_SUCCESS","SIGNIN_FAIL","authToken","login","email","password","role","Active","dispatch","header","headers","body","JSON","stringify","post","response","console","log","data","msg","type","payload","getUser","forEach","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP;AACA,SAKEC,cALF,EAMEC,WANF;AASA,OAAOC,SAAP;AA4DA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAAwBC,MAAxB;AAAA,SAAmC,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChDC,YAAAA,MADgD,GACvC;AACbC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT;AADI,aADuC;AAOhDC,YAAAA,IAPgD,GAOzCC,IAAI,CAACC,SAAL,CAAe;AAAET,cAAAA,KAAK,EAALA,KAAF;AAASC,cAAAA,QAAQ,EAARA,QAAT;AAAmBC,cAAAA,IAAI,EAAJA,IAAnB;AAAyBC,cAAAA,MAAM,EAANA;AAAzB,aAAf,CAPyC;AAAA;AAAA;AAAA,6CAU7BT,KAAK,CAACgB,IAAN,CAAW,OAAX,EAAoBH,IAApB,EAA0BF,MAA1B,CAV6B;;AAAA;AAU9CM,YAAAA,QAV8C;AAWpDC,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,QAAQ,CAACG,IAAT,CAAcC,GAA5C;AAEAX,YAAAA,QAAQ,CAAC;AACPY,cAAAA,IAAI,EAAEpB,cADC;AAEPqB,cAAAA,OAAO,EAAEN,QAAQ,CAACG,IAAT,CAAcC;AAFhB,aAAD,CAAR;AAIAH,YAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAT,YAAAA,QAAQ,CAACc,OAAO,EAAR,CAAR;AAlBoD;AAAA;;AAAA;AAAA;AAAA;AAqBpDN,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AAEA,6BAAW;AACT,0BAAMM,OAAN,CAAc,UAACC,KAAD,EAAW;AACvBhB,gBAAAA,QAAQ,CAACT,QAAQ,CAACyB,KAAK,CAACL,GAAP,EAAY,QAAZ,CAAT,CAAR;AACD,eAFD;AAGD;;AACDX,YAAAA,QAAQ,CAAC;AACPY,cAAAA,IAAI,EAAEnB;AADC,aAAD,CAAR;;AA5BoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;AAAA,CAAd","sourcesContent":["import axios from 'axios';\nimport setAlert from './alert';\nimport {\n  //   SIGNUP_SUCCESS,\n  //   SIGNUP_FAIL,\n  //   GET_USER,\n  //   AUTH_ERROR,\n  SIGNIN_SUCCESS,\n  SIGNIN_FAIL,\n  //   SIGNOUT,\n} from '../Action/types';\nimport authToken from '../utils/authToken';\n\n// //! Get User\n// export const getUser = () => async (dispatch) => {\n//   if (AsyncStorage.token) {\n//     authToken(AsyncStorage.token);\n//   }\n\n//   try {\n//     const response = await axios.get('/auth');\n//     console.log('Response on Action/auth-->', response.data.msg);\n//     dispatch({\n//       type: GET_USER,\n//       payload: response.data.msg,\n//     });\n//   } catch (error) {\n//     dispatch({\n//       type: AUTH_ERROR,\n//     });\n//   }\n// };\n\n// //! Register User\n// export const authenticate = ({ name, email, password, role, Active }) => async (\n//   dispatch\n// ) => {\n//   const header = {\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//   };\n\n//   const body = JSON.stringify({ name, email, password, role, Active });\n\n//   try {\n//     const response = await axios.post('/users', body, header);\n//     console.log('SIGNUP RES--->', response);\n\n//     dispatch({\n//       type: SIGNUP_SUCCESS,\n//       payload: response.data.msg,\n//     });\n\n//     dispatch(getUser());\n//   } catch (error) {\n//     const errors = error.response.data.msg;\n//     console.log(errors);\n\n//     if (errors) {\n//       errors.forEach((error) => {\n//         dispatch(setAlert(error.msg, 'danger'));\n//       });\n//     }\n//     dispatch({\n//       type: SIGNUP_FAIL,\n//     });\n//   }\n// };\n\n//! Sign In User\nexport const login = (email, password, role, Active) => async (dispatch) => {\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ email, password, role, Active });\n\n  try {\n    const response = await axios.post('/auth', body, header);\n    console.log('SIGNIN RES--->', response.data.msg);\n\n    dispatch({\n      type: SIGNIN_SUCCESS,\n      payload: response.data.msg,\n    });\n    console.log('After dispatch siginSuccess');\n    dispatch(getUser());\n  } catch (error) {\n    //const errors = error.response.data.msg;\n    console.log('Error signIN-->', error);\n\n    if (error) {\n      error.forEach((error) => {\n        dispatch(setAlert(error.msg, 'danger'));\n      });\n    }\n    dispatch({\n      type: SIGNIN_FAIL,\n    });\n  }\n};\n\n// //! Sign Out User\n// export const signOut = () => (dispatch) => {\n//   dispatch({\n//     type: SIGNOUT,\n//   });\n// };\n"]},"metadata":{},"sourceType":"module"}