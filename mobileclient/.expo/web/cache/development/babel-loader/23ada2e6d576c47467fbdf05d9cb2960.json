{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport setAlert from \"./alert\";\nimport { AUTH_ERROR, SIGNIN_SUCCESS, SIGNIN_FAIL } from \"../Action/types\";\nimport authToken from \"../utils/authToken\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nexport var getUser = function getUser() {\n  return function _callee(dispatch) {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log(\"BEFORE AXIOS GET USER\");\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get('/auth'));\n\n          case 4:\n            response = _context.sent;\n            console.log('Response on Action/auth-->', response.data.msg);\n            dispatch({\n              type: GET_USER,\n              payload: response.data.msg\n            });\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch({\n              type: AUTH_ERROR\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n};\nexport var login = function login(email, password, role, Active) {\n  return function _callee2(dispatch) {\n    var header, body, response;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"USER EMAIL ACTION/AUTH--->\", email, password, role, Active);\n            header = {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            };\n            body = JSON.stringify(email, password, role, Active);\n            console.log('LOGIN BODY--->', body);\n            _context2.prev = 4;\n            console.log(\"Before AXIOS\");\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(axios.post('/auth', body, header));\n\n          case 8:\n            response = _context2.sent;\n            console.log('SIGNIN RES--->', response.data.msg);\n            dispatch({\n              type: SIGNIN_SUCCESS,\n              payload: response.data.msg\n            });\n            console.log('After dispatch siginSuccess');\n            dispatch(getUser());\n            _context2.next = 20;\n            break;\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](4);\n            console.log('Error signIN-->', _context2.t0);\n\n            if (_context2.t0) {\n              _context2.t0.forEach(function (error) {\n                dispatch(setAlert(error.msg, 'danger'));\n              });\n            }\n\n            dispatch({\n              type: SIGNIN_FAIL\n            });\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[4, 15]], Promise);\n  };\n};","map":{"version":3,"sources":["/Users/ashimsmac/Desktop/MUM/Final_Project/final-porject-ghimirea/mobileclient/components/Action/auth.js"],"names":["axios","setAlert","AUTH_ERROR","SIGNIN_SUCCESS","SIGNIN_FAIL","authToken","getUser","dispatch","console","log","get","response","data","msg","type","GET_USER","payload","login","email","password","role","Active","header","headers","body","JSON","stringify","post","forEach","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP;AACA,SAIEC,UAJF,EAKEC,cALF,EAMEC,WANF;AASA,OAAOC,SAAP;;AAIA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAM,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAazBC,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAbyB;AAAA,6CAcFT,KAAK,CAACU,GAAN,CAAU,OAAV,CAdE;;AAAA;AAcnBC,YAAAA,QAdmB;AAezBH,YAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CE,QAAQ,CAACC,IAAT,CAAcC,GAAxD;AACAN,YAAAA,QAAQ,CAAC;AACPO,cAAAA,IAAI,EAAEC,QADC;AAEPC,cAAAA,OAAO,EAAEL,QAAQ,CAACC,IAAT,CAAcC;AAFhB,aAAD,CAAR;AAhByB;AAAA;;AAAA;AAAA;AAAA;AAqBzBN,YAAAA,QAAQ,CAAC;AACPO,cAAAA,IAAI,EAAEZ;AADC,aAAD,CAAR;;AArByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;AAAA,CAAhB;AAiEP,OAAO,IAAMe,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAAwBC,MAAxB;AAAA,SAAmC,kBAAOd,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACtDC,YAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAAyCS,KAAzC,EAAgDC,QAAhD,EAA0DC,IAA1D,EAAgEC,MAAhE;AACMC,YAAAA,MAFgD,GAEvC;AACbC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT;AADI,aAFuC;AAQhDC,YAAAA,IARgD,GAQzCC,IAAI,CAACC,SAAL,CAAgBR,KAAhB,EAAuBC,QAAvB,EAAiCC,IAAjC,EAAuCC,MAAvC,CARyC;AAStDb,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Be,IAA9B;AATsD;AAYpDhB,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAZoD;AAAA,6CAa7BT,KAAK,CAAC2B,IAAN,CAAW,OAAX,EAAoBH,IAApB,EAA0BF,MAA1B,CAb6B;;AAAA;AAa9CX,YAAAA,QAb8C;AAcpDH,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BE,QAAQ,CAACC,IAAT,CAAcC,GAA5C;AAEAN,YAAAA,QAAQ,CAAC;AACPO,cAAAA,IAAI,EAAEX,cADC;AAEPa,cAAAA,OAAO,EAAEL,QAAQ,CAACC,IAAT,CAAcC;AAFhB,aAAD,CAAR;AAIAL,YAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAF,YAAAA,QAAQ,CAACD,OAAO,EAAR,CAAR;AArBoD;AAAA;;AAAA;AAAA;AAAA;AAwBpDE,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AAEA,8BAAW;AACT,2BAAMmB,OAAN,CAAc,UAACC,KAAD,EAAW;AACvBtB,gBAAAA,QAAQ,CAACN,QAAQ,CAAC4B,KAAK,CAAChB,GAAP,EAAY,QAAZ,CAAT,CAAR;AACD,eAFD;AAGD;;AACDN,YAAAA,QAAQ,CAAC;AACPO,cAAAA,IAAI,EAAEV;AADC,aAAD,CAAR;;AA/BoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;AAAA,CAAd","sourcesContent":["import axios from 'axios';\nimport setAlert from './alert';\nimport {\n  //   SIGNUP_SUCCESS,\n  //   SIGNUP_FAIL,\n  //   GET_USER,\n  AUTH_ERROR,\n  SIGNIN_SUCCESS,\n  SIGNIN_FAIL,\n  //   SIGNOUT,\n} from '../Action/types';\nimport authToken from '../utils/authToken';\nimport { AsyncStorage } from 'react-native';\n\n//! Get User\nexport const getUser = () => async (dispatch) => {\n  // if (AsyncStorage.token) {\n  //   authToken(AsyncStorage.token);\n  // }\n  // const token = AsyncStorage.getItem('token').then(() => {\n  //   if (token) {\n  //     console.log(\"TOKEN---->\", token)\n  //     authToken(token);\n  //   }\n  // });\n  \n\n  try {\n    console.log(\"BEFORE AXIOS GET USER\")\n    const response = await axios.get('/auth');\n    console.log('Response on Action/auth-->', response.data.msg);\n    dispatch({\n      type: GET_USER,\n      payload: response.data.msg,\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n// //! Register User\n// export const authenticate = ({ name, email, password, role, Active }) => async (\n//   dispatch\n// ) => {\n//   const header = {\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//   };\n\n//   const body = JSON.stringify({ name, email, password, role, Active });\n\n//   try {\n//     const response = await axios.post('/users', body, header);\n//     console.log('SIGNUP RES--->', response);\n\n//     dispatch({\n//       type: SIGNUP_SUCCESS,\n//       payload: response.data.msg,\n//     });\n\n//     dispatch(getUser());\n//   } catch (error) {\n//     const errors = error.response.data.msg;\n//     console.log(errors);\n\n//     if (errors) {\n//       errors.forEach((error) => {\n//         dispatch(setAlert(error.msg, 'danger'));\n//       });\n//     }\n//     dispatch({\n//       type: SIGNUP_FAIL,\n//     });\n//   }\n// };\n\n//! Sign In User\nexport const login = (email, password, role, Active) => async (dispatch) => {\n  console.log(\"USER EMAIL ACTION/AUTH--->\",email, password, role, Active);\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify( email, password, role, Active );\n  console.log('LOGIN BODY--->', body)\n\n  try {\n    console.log(\"Before AXIOS\")\n    const response = await axios.post('/auth', body, header);\n    console.log('SIGNIN RES--->', response.data.msg);\n\n    dispatch({\n      type: SIGNIN_SUCCESS,\n      payload: response.data.msg,\n    });\n    console.log('After dispatch siginSuccess');\n    dispatch(getUser());\n  } catch (error) {\n    //const errors = error.response.data.msg;\n    console.log('Error signIN-->', error);\n\n    if (error) {\n      error.forEach((error) => {\n        dispatch(setAlert(error.msg, 'danger'));\n      });\n    }\n    dispatch({\n      type: SIGNIN_FAIL,\n    });\n  }\n};\n\n// //! Sign Out User\n// export const signOut = () => (dispatch) => {\n//   dispatch({\n//     type: SIGNOUT,\n//   });\n// };\n"]},"metadata":{},"sourceType":"module"}