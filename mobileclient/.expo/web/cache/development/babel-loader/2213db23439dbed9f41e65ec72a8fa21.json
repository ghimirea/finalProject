{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ashimsmac/Desktop/MUM/Final_Project/final-porject-ghimirea/mobileclient/components/screens/LoginScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Container, Header, Content, Form, Item, Input, Label, Left, Right, Body, Title, Button, Icon } from 'native-base';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport FarmerScreen from \"./FarmerScreen\";\nimport AuthenticatedScreen from \"../auth/authenticatedScreen\";\nimport { login, getUser } from \"../Action/auth\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { color } from 'react-native-reanimated';\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var login = _ref.login,\n      getUser = _ref.getUser,\n      _ref$auth = _ref.auth,\n      user = _ref$auth.user,\n      isAuth = _ref$auth.isAuth,\n      isLoading = _ref$auth.isLoading,\n      navigate = _ref.navigation.navigate;\n  console.log('ISAUTH LOGIN--->', isAuth, user);\n  useEffect(function () {\n    var y = getUser();\n    console.log('GET USER--->', y);\n  }, [getUser]);\n\n  var _useState = useState({\n    email: '',\n    password: '',\n    role: 'Customer',\n    Active: 'true'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginData = _useState2[0],\n      setLoginData = _useState2[1];\n\n  var email = loginData.email,\n      password = loginData.password,\n      role = loginData.role,\n      Active = loginData.Active;\n\n  var signIn = function signIn(event) {\n    return _regeneratorRuntime.async(function signIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            login(email, password, role, Active);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (isAuth) {\n    navigate('MATERIAL_HOME');\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, React.createElement(Form, {\n    onSubmit: function onSubmit(event) {\n      return signIn(event);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, React.createElement(Item, {\n    floatingLabel: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Email\"), React.createElement(Input, {\n    onChangeText: function onChangeText(text) {\n      return setLoginData(_objectSpread(_objectSpread({}, loginData), {}, {\n        email: text\n      }));\n    },\n    name: \"email\",\n    id: \"email\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })), React.createElement(Item, {\n    floatingLabel: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Password\"), React.createElement(Input, {\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setLoginData(_objectSpread(_objectSpread({}, loginData), {}, {\n        password: text\n      }));\n    },\n    value: password,\n    name: \"password\",\n    id: \"password\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })), React.createElement(Item, {\n    floatingLabel: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, React.createElement(Input, {\n    disabled: true,\n    placeholder: \"Customer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }))), React.createElement(Button, {\n    type: \"submit\",\n    full: true,\n    iconLeft: true,\n    onPress: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              login(email, password, role, Active);\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    type: \"MaterialCommunityIcons\",\n    name: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    style: styles.toRegister,\n    onPress: function onPress() {\n      return navigate('MATERIAL_REGISTER');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'orange'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"Don't have an account...Click Here\"))));\n};\n\nLoginScreen.prototypes = {\n  login: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  getUser: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  login: login,\n  getUser: getUser\n})(LoginScreen);\nvar styles = StyleSheet.create({\n  toRegister: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 20\n  }\n});","map":{"version":3,"sources":["/Users/ashimsmac/Desktop/MUM/Final_Project/final-porject-ghimirea/mobileclient/components/screens/LoginScreen.js"],"names":["React","useState","useEffect","axios","connect","PropTypes","Container","Header","Content","Form","Item","Input","Label","Left","Right","Body","Title","Button","Icon","NavigationContainer","useNavigation","FarmerScreen","AuthenticatedScreen","login","getUser","TouchableOpacity","color","LoginScreen","auth","user","isAuth","isLoading","navigate","navigation","console","log","y","email","password","role","Active","loginData","setLoginData","signIn","event","preventDefault","text","styles","toRegister","prototypes","func","isRequired","object","mapStateToProps","state","StyleSheet","create","flex","justifyContent","alignItems","paddingTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, View, SafeAreaView } from 'react-native';\nimport {\n  Container,\n  Header,\n  Content,\n  Form,\n  Item,\n  Input,\n  Label,\n  Left,\n  Right,\n  Body,\n  Title,\n  Button,\n  Icon,\n} from 'native-base';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport FarmerScreen from './FarmerScreen';\nimport AuthenticatedScreen from '../auth/authenticatedScreen';\nimport { login, getUser } from '../Action/auth';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { color } from 'react-native-reanimated';\n\nconst LoginScreen = ({\n  login,\n  getUser,\n  auth: { user, isAuth, isLoading },\n  navigation: { navigate },\n}) => {\n  console.log('ISAUTH LOGIN--->', isAuth, user);\n  useEffect(() => {\n    const y = getUser();\n    console.log('GET USER--->', y);\n  }, [getUser]);\n  const [loginData, setLoginData] = useState({\n    email: '',\n    password: '',\n    role: 'Customer',\n    Active: 'true',\n  });\n\n  const { email, password, role, Active } = loginData;\n\n  const signIn = async (event) => {\n    event.preventDefault();\n    login(email, password, role, Active);\n  };\n\n  if (isAuth) {\n    navigate('MATERIAL_HOME');\n  }\n\n  return (\n    // <SafeAreaView>\n    <Container>\n      <Header />\n      {/* <Left />\n        <Body>\n          <Title>Login</Title>\n        </Body>\n        <Right />\n      </Header> */}\n      <Content>\n        <Form onSubmit={(event) => signIn(event)}>\n          <Item floatingLabel>\n            <Label>Email</Label>\n            <Input\n              onChangeText={(text) =>\n                setLoginData({ ...loginData, email: text })\n              }\n              // value={email}\n              name='email'\n              id='email'\n              autoCapitalize='none'\n            />\n          </Item>\n          <Item floatingLabel>\n            <Label>Password</Label>\n            <Input\n              secureTextEntry\n              onChangeText={(text) =>\n                setLoginData({ ...loginData, password: text })\n              }\n              value={password}\n              name='password'\n              id='password'\n              autoCapitalize='none'\n            />\n          </Item>\n          <Item floatingLabel>\n            <Input disabled placeholder='Customer' />\n          </Item>\n        </Form>\n        <Button\n          type='submit'\n          full\n          iconLeft\n          onPress={async () => {\n             login(email, password, role, Active);\n\n          //   const header = {\n          //     headers: {\n          //       'Content-Type': 'application/json',\n          //     },\n          //   };\n\n          //   const body = JSON.stringify({ email, password, role, Active });\n          //   console.log('LOGIN BODY--->', body);\n\n          //   console.log('Before AXIOS');\n          //   const response = await axios.post('http://10.10.14.11:5000/auth', body, header);\n          //   console.log('SIGNIN RES--->', response.data.msg);\n           }}\n        >\n          <Icon type='MaterialCommunityIcons' name='login' />\n          <Text>Login</Text>\n        </Button>\n        <TouchableOpacity\n          style={styles.toRegister}\n          onPress={() => navigate('MATERIAL_REGISTER')}\n        >\n          <Text style={{ color: 'orange' }}>\n            Don't have an account...Click Here\n          </Text>\n        </TouchableOpacity>\n      </Content>\n    </Container>\n    // </SafeAreaView>\n  );\n};\nLoginScreen.prototypes = {\n  login: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  getUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { login, getUser })(LoginScreen);\n\nconst styles = StyleSheet.create({\n  toRegister: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}